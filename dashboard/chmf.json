{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 3,
  "iteration": 1638704953558,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 6,
      "panels": [],
      "title": "TRANSAQ",
      "type": "row"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Price close"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyRUB"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 23,
        "x": 0,
        "y": 1
      },
      "id": 2,
      "maxDataPoints": 80,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select * from (select p.q, (p.price*$shares)/((t.value*70)) as \"EV/EBITDA 12M\" FROM (\nSELECT\n    toDate(toStartOfQuarter(date_add(day, 44 , date))) as q,\n    avgWeighted(close, volume) as price\nFROM candles\nWHERE sec_code == 'CHMF' and period == 5\nGROUP BY q) as p\nLEFT JOIN $table as t ON p.q == t.quarter\nWHERE t.indicator == '12M EBITDA' and t.sec_code == 'CHMF' and $dateCol >= toDate($from) and $dateCol <= toDate($to)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , $forecast_price*$shares/(6058*70))\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 6, now()))) as q , $forecast_price*$shares/(6014*70)))\nORDER by q",
          "rawQuery": "select * from (select p.q, (p.price*837.72)/((t.value*70)) as \"EV/EBITDA 12M\" FROM (\nSELECT\n    toDate(toStartOfQuarter(date_add(day, 44 , date))) as q,\n    avgWeighted(close, volume) as price\nFROM candles\nWHERE sec_code == 'CHMF' and period == 5\nGROUP BY q) as p\nLEFT JOIN default.financial_highlights as t ON p.q == t.quarter\nWHERE t.indicator == '12M EBITDA' and t.sec_code == 'CHMF' and quarter >= toDate(1480961669) and quarter <= toDate(1654452869)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , 1214*837.72/(6058*70))\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 6, now()))) as q , 1214*837.72/(6014*70)))\nORDER by q",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select * from (select p.q, (p.price*$shares)/((t.value*70)*4) as \"EV/EBITDA 3M\" FROM (\nSELECT\n    toDate(toStartOfQuarter(date_add(day, 44 , date))) as q,\n    avgWeighted(close, volume) as price\nFROM candles\nWHERE sec_code == 'CHMF' and period == 5\nGROUP BY q) as p\nLEFT JOIN $table as t ON p.q == t.quarter\nWHERE t.indicator == 'EBITDA' and t.sec_code == 'CHMF' and $dateCol >= toDate($from) and $dateCol <= toDate($to)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , ($forecast_price*$shares/(1526*70*4)))\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 6, now()))) as q , ($forecast_price*$shares/(1118*70*4))))\nORDER by q",
          "rawQuery": "select * from (select p.q, (p.price*837.72)/((t.value*70)*4) as \"EV/EBITDA 3M\" FROM (\nSELECT\n    toDate(toStartOfQuarter(date_add(day, 44 , date))) as q,\n    avgWeighted(close, volume) as price\nFROM candles\nWHERE sec_code == 'CHMF' and period == 5\nGROUP BY q) as p\nLEFT JOIN default.financial_highlights as t ON p.q == t.quarter\nWHERE t.indicator == 'EBITDA' and t.sec_code == 'CHMF' and quarter >= toDate(1480961669) and quarter <= toDate(1654452869)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , (1214*837.72/(1526*70*4)))\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 6, now()))) as q , (1214*837.72/(1118*70*4))))\nORDER by q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "",
          "dateLoading": false,
          "dateTimeColDataType": "date",
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    $timeSeries as t,\n    avgWeighted(close, volume) as \"Price close\"\nFROM $table\nWHERE\n    $timeFilter\n    and sec_code == 'CHMF' and period == 5\nGROUP BY t\nORDER BY t",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    (intDiv(toUInt32(date), 2592000) * 2592000) * 1000 as t,\n    avgWeighted(close, volume) as \"Price close\"\nFROM default.candles\nWHERE\n    date >= toDateTime(1480961669) AND date <= toDateTime(1654452869)\n    and sec_code == 'CHMF' and period == 5\nGROUP BY t\nORDER BY t",
          "refId": "close",
          "round": "0s",
          "skip_comments": true,
          "table": "candles",
          "tableLoading": false
        }
      ],
      "title": "Price History",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 4,
      "panels": [],
      "title": "HIGHLIGHTS",
      "type": "row"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "left",
            "axisSoftMin": 0,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "CAPEX"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "EBITDA"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 8,
      "options": {
        "barWidth": 1,
        "groupWidth": 0.95,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "text": {
          "valueSize": 16
        },
        "tooltip": {
          "mode": "single"
        },
        "xTickLabelRotation": 0
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "select quarter_name,\n       last_value(multiIf(equals(has(array('CAPEX','Net cash (used in)/from investing activities - continuing operations'), indicator), 1), value, NULL)) as CAPEX,\n       last_value(multiIf(equals(has(array('EBITDA','Gross profit'), indicator), 1), value, NULL)) as EBITDA,\n       last_value(multiIf(equals(has(array('Revenue','Revenue - third parties'), indicator), 1), value, NULL)) as Revenue\nfrom $table\nwhere sec_code == 'CHMF' and $dateCol >= toDate($from) and $dateCol <= toDate($to)\ngroup by quarter_name, $dateCol\norder by $dateCol\n\n",
          "queryType": "randomWalk",
          "rawQuery": "select quarter_name,\n       last_value(multiIf(equals(has(array('CAPEX','Net cash (used in)/from investing activities - continuing operations'), indicator), 1), value, NULL)) as CAPEX,\n       last_value(multiIf(equals(has(array('EBITDA','Gross profit'), indicator), 1), value, NULL)) as EBITDA,\n       last_value(multiIf(equals(has(array('Revenue','Revenue - third parties'), indicator), 1), value, NULL)) as Revenue\nfrom default.financial_highlights\nwhere sec_code == 'CHMF' and quarter >= toDate(1521958771) and quarter <= toDate(1641277171)\ngroup by quarter_name, quarter\norder by quarter",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        }
      ],
      "title": "Динамика Выручки и EBITDA",
      "transformations": [],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "left",
            "axisSoftMin": 0,
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "CAPEX"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "EBITDA"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 9,
      "options": {
        "barWidth": 1,
        "groupWidth": 0.96,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "text": {},
        "tooltip": {
          "mode": "single"
        },
        "xTickLabelRotation": 0
      },
      "targets": [
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "table",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "select quarter_name,\n       last_value(multiIf(equals(indicator,'Profit before financing and taxation'), value, NULL)) as FCF,\n       last_value(multiIf(equals(indicator,'Dividends paid'), value, NULL)) as Dividends\nfrom $table\nwhere sec_code == 'CHMF'\ngroup by quarter_name,$dateCol\norder by $dateCol\n\n\n",
          "queryType": "randomWalk",
          "rawQuery": "select quarter_name,\n       last_value(multiIf(equals(indicator,'Profit before financing and taxation'), value, NULL)) as FCF,\n       last_value(multiIf(equals(indicator,'Dividends paid'), value, NULL)) as Dividends\nfrom default.financial_highlights\nwhere sec_code == 'CHMF'\ngroup by quarter_name,quarter\norder by quarter",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        }
      ],
      "title": "Динамика Свободного денежного потока",
      "transformations": [],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 3,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "NWC as revenue"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "Cost"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 27,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT \n   q,\n   value as NWC\nFROM (SELECT\n    $dateCol as q,\n    (last_value(ca.value) - last_value(cl.value)) as value\n    FROM $table as ca\n    LEFT JOIN $table as cl on (cl.$dateCol == ca.$dateCol)\n    WHERE ca.sec_code == 'CHMF' and cl.sec_code == 'CHMF' and ca.indicator == 'Total current assets' and cl.indicator == 'Total current liabilities'\n    GROUP BY q, ca.indicator, cl.indicator\n    UNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 2, now()))) as q, 1040 as NWC)\n    )\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT \n   q,\n   value as NWC\nFROM (SELECT\n    quarter as q,\n    (last_value(ca.value) - last_value(cl.value)) as value\n    FROM default.financial_highlights as ca\n    LEFT JOIN default.financial_highlights as cl on (cl.quarter == ca.quarter)\n    WHERE ca.sec_code == 'CHMF' and cl.sec_code == 'CHMF' and ca.indicator == 'Total current assets' and cl.indicator == 'Total current liabilities'\n    GROUP BY q, ca.indicator, cl.indicator\n    UNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 2, now()))) as q, 1040 as NWC)\n    )\nORDER BY q",
          "refId": "F",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT q, Revenue FROM (SELECT\n    $dateCol as q,\n    last_value(value) as Revenue\nFROM $table\nWHERE sec_code == 'CHMF' and indicator == 'Revenue'\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 2, now()))) as q, 2886.5 as Revenue)\n)\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT q, Revenue FROM (SELECT\n    quarter as q,\n    last_value(value) as Revenue\nFROM default.financial_highlights\nWHERE sec_code == 'CHMF' and indicator == 'Revenue'\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 2, now()))) as q, 2886.5 as Revenue)\n)\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT * FROM (SELECT q, sum(value) as Cost\nFROM (SELECT\n    $dateCol as q,\n    indicator,\n    last_value(multiIf(equals(indicator,'Profit from operations'), -value, value)) as value\nFROM $table\nWHERE sec_code == 'CHMF' and has(array('Revenue - third parties', 'Revenue - related parties', 'Profit from operations'), indicator) == 1\nGROUP BY q, indicator)\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 1500 as Cost)\n)\nORDER BY q",
          "queryType": "randomWalk",
          "rawQuery": "SELECT * FROM (SELECT q, sum(value) as Cost\nFROM (SELECT\n    quarter as q,\n    indicator,\n    last_value(multiIf(equals(indicator,'Profit from operations'), -value, value)) as value\nFROM default.financial_highlights\nWHERE sec_code == 'CHMF' and has(array('Revenue - third parties', 'Revenue - related parties', 'Profit from operations'), indicator) == 1\nGROUP BY q, indicator)\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 1500 as Cost)\n)\nORDER BY q",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT q, sum(value) as Amortisation\nFROM (SELECT\n    $dateCol as q,\n    indicator,\n    last_value(value) as value\nFROM $table\nWHERE sec_code == 'CHMF' and has(array('Depreciation and amortisation'),indicator ) == 1\nGROUP BY q, indicator)\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT q, sum(value) as Amortisation\nFROM (SELECT\n    quarter as q,\n    indicator,\n    last_value(value) as value\nFROM default.financial_highlights\nWHERE sec_code == 'CHMF' and has(array('Depreciation and amortisation'),indicator ) == 1\nGROUP BY q, indicator)\nGROUP BY q\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT q, sum(value) as \"Interest paid\"\nFROM (SELECT\n    $dateCol as q,\n    indicator,\n    last_value(value) as value\nFROM $table\nWHERE sec_code == 'CHMF' and has(array('Interest paid'),indicator ) == 1\nGROUP BY q, indicator)\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT q, sum(value) as \"Interest paid\"\nFROM (SELECT\n    quarter as q,\n    indicator,\n    last_value(value) as value\nFROM default.financial_highlights\nWHERE sec_code == 'CHMF' and has(array('Interest paid'),indicator ) == 1\nGROUP BY q, indicator)\nGROUP BY q\nORDER BY q",
          "refId": "D",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT q, sum(value) as \"Income tax paid\"\nFROM (SELECT\n    $dateCol as q,\n    indicator,\n    last_value(value) as value\nFROM $table\nWHERE sec_code == 'CHMF' and has(array('Income tax paid'),indicator ) == 1\nGROUP BY q, indicator)\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT q, sum(value) as \"Income tax paid\"\nFROM (SELECT\n    quarter as q,\n    indicator,\n    last_value(value) as value\nFROM default.financial_highlights\nWHERE sec_code == 'CHMF' and has(array('Income tax paid'),indicator ) == 1\nGROUP BY q, indicator)\nGROUP BY q\nORDER BY q",
          "refId": "E",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT q, n.NWC/(r.Revenue*4) as \"NWC as revenue\"  FROM (SELECT\n    $dateCol as q,\n    last_value(value) as Revenue\nFROM $table\nWHERE sec_code == 'CHMF' and indicator == 'Revenue'\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 2886.5 as Revenue)\n) as r\nleft join (\nSELECT\n    $dateCol as q,\n    (last_value(ca.value) - last_value(cl.value)) as NWC\n    FROM $table as ca\n    LEFT JOIN $table as cl on (cl.$dateCol == ca.$dateCol)\n    WHERE ca.sec_code == 'CHMF' and cl.sec_code == 'CHMF' and ca.indicator == 'Total current assets' and cl.indicator == 'Total current liabilities'\n    GROUP BY q, ca.indicator, cl.indicator\n    UNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 2, now()))) as q, 1040 as NWC)\n) as n on (r.q == n.q)\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT q, n.NWC/(r.Revenue*4) as \"NWC as revenue\"  FROM (SELECT\n    quarter as q,\n    last_value(value) as Revenue\nFROM default.financial_highlights\nWHERE sec_code == 'CHMF' and indicator == 'Revenue'\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 2886.5 as Revenue)\n) as r\nleft join (\nSELECT\n    quarter as q,\n    (last_value(ca.value) - last_value(cl.value)) as NWC\n    FROM default.financial_highlights as ca\n    LEFT JOIN default.financial_highlights as cl on (cl.quarter == ca.quarter)\n    WHERE ca.sec_code == 'CHMF' and cl.sec_code == 'CHMF' and ca.indicator == 'Total current assets' and cl.indicator == 'Total current liabilities'\n    GROUP BY q, ca.indicator, cl.indicator\n    UNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 2, now()))) as q, 1040 as NWC)\n) as n on (r.q == n.q)\nORDER BY q",
          "refId": "G",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_highlights",
          "tableLoading": false
        }
      ],
      "title": "Выручка и затраты",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 35
      },
      "id": 28,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    trim(TRAILING '*' from product) as product,\n    last_value(sales.value)*last_value(prices.price) as perc\nFROM consolidated_sales_for_products as sales\n       LEFT JOIN prices_for_products as prices ON\n          sales.quarter == prices.quarter\n      and sales.sec_code == prices.sec_code\n      and trim(TRAILING '*' from prices.product) == trim(TRAILING '*' from sales.product)\nWHERE sales.sec_code == 'CHMF' and has(array('Semi-finished products',\n     'Hot-rolled coil',\n     'Hot-rolled plate',\n     'Hot - rolled coil and plate',\n     'Cold-rolled coil',\n     'Colour coated coil',\n     'Long products',\n     'Metalware products',\n     'Large diameter pipes',\n     'Other tubes, pipes, formed shapes'), trim(TRAILING '*' from sales.product)) == 1\nGROUP BY q, product\nORDER BY q",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    trim(TRAILING '*' from product) as product,\n    last_value(sales.value)*last_value(prices.price) as perc\nFROM consolidated_sales_for_products as sales\n       LEFT JOIN prices_for_products as prices ON\n          sales.quarter == prices.quarter\n      and sales.sec_code == prices.sec_code\n      and trim(TRAILING '*' from prices.product) == trim(TRAILING '*' from sales.product)\nWHERE sales.sec_code == 'CHMF' and has(array('Semi-finished products',\n     'Hot-rolled coil',\n     'Hot-rolled plate',\n     'Hot - rolled coil and plate',\n     'Cold-rolled coil',\n     'Colour coated coil',\n     'Long products',\n     'Metalware products',\n     'Large diameter pipes',\n     'Other tubes, pipes, formed shapes'), trim(TRAILING '*' from sales.product)) == 1\nGROUP BY q, product\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "financial_ratios",
          "tableLoading": false
        }
      ],
      "title": "Структура стальной выручки",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 29,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select q,structure, last_value(value) from (SELECT\n    quarter as q,\n    structure,\n    avg(value) as value\nFROM $table\nWHERE sec_code == 'CHMF' and has(array('Iron ore pellets and concentrate',\n     'Coking and Steam coal',\n     'Transport and storage services',\n     'Semi-finished products'\n), structure) == 1\nGROUP BY q, structure\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Iron ore pellets and concentrate' as structure, 124*980/1000 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Coking and Steam coal' as structure, 9 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Transport and storage services' as structure, 133 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Semi-finished products' as structure, 350*630/1000 as value)\n\n)\nGROUP BY q, structure\nORDER BY q",
          "queryType": "randomWalk",
          "rawQuery": "select q,structure, last_value(value) from (SELECT\n    quarter as q,\n    structure,\n    avg(value) as value\nFROM default.revenue_structure\nWHERE sec_code == 'CHMF' and has(array('Iron ore pellets and concentrate',\n     'Coking and Steam coal',\n     'Transport and storage services',\n     'Semi-finished products'\n), structure) == 1\nGROUP BY q, structure\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Iron ore pellets and concentrate' as structure, 124*980/1000 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Coking and Steam coal' as structure, 9 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Transport and storage services' as structure, 133 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Semi-finished products' as structure, 350*630/1000 as value)\n\n)\nGROUP BY q, structure\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "revenue_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT * FROM (SELECT\n    q,\n    sum(v) as \"Rolled products\"\nFROM\n(\n    SELECT\n        quarter as q,\n        structure,\n        last_value(value) as v\n    FROM $table\n\n    WHERE\n        sec_code == 'CHMF'\n        and has(array('Hot - rolled coil and plate', 'Galvanised and metallic coated coil', 'Cold-rolled coil', 'Colour coated coil', 'Long products'), structure) == 1\n    GROUP BY\n        q,\n        structure\n)\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 974*2000/1000 as \"Rolled products\")\n)\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT * FROM (SELECT\n    q,\n    sum(v) as \"Rolled products\"\nFROM\n(\n    SELECT\n        quarter as q,\n        structure,\n        last_value(value) as v\n    FROM default.revenue_structure\n\n    WHERE\n        sec_code == 'CHMF'\n        and has(array('Hot - rolled coil and plate', 'Galvanised and metallic coated coil', 'Cold-rolled coil', 'Colour coated coil', 'Long products'), structure) == 1\n    GROUP BY\n        q,\n        structure\n)\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 974*2000/1000 as \"Rolled products\")\n)\nORDER BY q",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "revenue_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select * FROM (\nSELECT\n    q,\n    sum(v) as \"Downstream products\"\nFROM\n(\n    SELECT\n        quarter as q,\n        structure,\n        last_value(value) as v\n    FROM $table\n\n    WHERE\n        sec_code == 'CHMF'\n        and has(array('Metalware products', 'Large diameter pipes', 'Other tubes, pipes, formed shapes'), structure) == 1\n    GROUP BY\n        q,\n        structure\n)\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 450*1010/1000 as \"Downstream products\")\n)\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "select * FROM (\nSELECT\n    q,\n    sum(v) as \"Downstream products\"\nFROM\n(\n    SELECT\n        quarter as q,\n        structure,\n        last_value(value) as v\n    FROM default.revenue_structure\n\n    WHERE\n        sec_code == 'CHMF'\n        and has(array('Metalware products', 'Large diameter pipes', 'Other tubes, pipes, formed shapes'), structure) == 1\n    GROUP BY\n        q,\n        structure\n)\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 450*1010/1000 as \"Downstream products\")\n)\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "revenue_structure",
          "tableLoading": false
        }
      ],
      "title": "Структура польной выручки",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "mappings": [],
          "max": 3297,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 3250
              }
            ]
          },
          "unit": "masst"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 51
      },
      "id": 33,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select q,production, last_value(ton)  from (SELECT\n    quarter as q,\n    production,\n    last_value(value) as ton\nFROM $table\nWHERE sec_code == 'CHMF' and has(array('Crude Steel (Russian Steel)','Hot metal (Russian Steel)'), production) == 1\nGROUP BY q, production\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Crude Steel (Russian Steel)' as production, 2950 as ton)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Hot metal (Russian Steel)' as production, 2800 as ton))\nGROUP BY q, production\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "select q,production, last_value(ton)  from (SELECT\n    quarter as q,\n    production,\n    last_value(value) as ton\nFROM default.productions\nWHERE sec_code == 'CHMF' and has(array('Crude Steel (Russian Steel)','Hot metal (Russian Steel)'), production) == 1\nGROUP BY q, production\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Crude Steel (Russian Steel)' as production, 2950 as ton)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Hot metal (Russian Steel)' as production, 2800 as ton))\nGROUP BY q, production\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "productions",
          "tableLoading": false
        }
      ],
      "title": "Производственные показатели, тыс. тон",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 0
              }
            ]
          },
          "unit": "masst"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 59
      },
      "id": 30,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    sales.quarter as q,\n    last_value(prod.value) - last_value(sales.value)*1.075 as \"production crude steel - sales products\"\nFROM $table as sales\nLEFT JOIN productions as prod ON sales.quarter == prod.quarter and sales.sec_code == prod.sec_code\nWHERE sales.product == 'Total steel products (Consolidated)' and sales.sec_code == 'CHMF' \nand prod.production = 'Crude Steel (Russian Steel)'\nGROUP BY q\nORDER BY q",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    sales.quarter as q,\n    last_value(prod.value) - last_value(sales.value)*1.075 as \"production crude steel - sales products\"\nFROM default.consolidated_sales_for_products as sales\nLEFT JOIN productions as prod ON sales.quarter == prod.quarter and sales.sec_code == prod.sec_code\nWHERE sales.product == 'Total steel products (Consolidated)' and sales.sec_code == 'CHMF' \nand prod.production = 'Crude Steel (Russian Steel)'\nGROUP BY q\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "consolidated_sales_for_products",
          "tableLoading": false
        }
      ],
      "title": "Разница между консолидированными продажами и производством сырой стали  ,  тыс. тон",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "masst"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 67
      },
      "id": 36,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "month",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": true,
          "intervalFactor": 1,
          "query": "select t, avg(LoadingRZD*1000) as \"Loading RZD avg\" FROM (SELECT $dateCol as t, last_value(value) as LoadingRZD FROM $table WHERE name == 'szd' GROUP BY t\nUNION ALL (SELECT toDate(toStartOfMonth(date_add(month, -1, $dateCol))) as t, last_value(value) as LoadingRZD FROM $table WHERE name == 'szd' GROUP BY t))\nGROUP BY t\nORDER BY t",
          "rawQuery": "select t, avg(LoadingRZD*1000) as \"Loading RZD avg\" FROM (SELECT month as t, last_value(value) as LoadingRZD FROM default.loading_rzd WHERE name == 'szd' GROUP BY t\nUNION ALL (SELECT toDate(toStartOfMonth(date_add(month, -1, month))) as t, last_value(value) as LoadingRZD FROM default.loading_rzd WHERE name == 'szd' GROUP BY t))\nGROUP BY t\nORDER BY t",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "loading_rzd",
          "tableLoading": false
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select q,product,last_value(value)  from (SELECT\n    quarter as q,\n    product,\n    value\nFROM $table\nWHERE sec_code == 'CHMF' and has(array(\n'Coal',\n'Iron ore',\n'Rolled products',\n'Downstream products',\n'Semi-finished products',\n'Total steel products (Consolidated)'\n), product) == 1\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Coal' as product, 100 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Iron ore' as product, 980 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Rolled products' as product, 2000 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Downstream products' as product, 450 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Semi-finished products' as product, 350 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Total steel products (Consolidated)' as product, 2800 as value)\n)\nGROUP BY q, product\nORDER BY q, product",
          "queryType": "randomWalk",
          "rawQuery": "select q,product,last_value(value)  from (SELECT\n    quarter as q,\n    product,\n    value\nFROM default.consolidated_sales_for_products\nWHERE sec_code == 'CHMF' and has(array(\n'Coal',\n'Iron ore',\n'Rolled products',\n'Downstream products',\n'Semi-finished products',\n'Total steel products (Consolidated)'\n), product) == 1\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Coal' as product, 100 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Iron ore' as product, 980 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Rolled products' as product, 2000 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Downstream products' as product, 450 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Semi-finished products' as product, 350 as value)\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q, 'Total steel products (Consolidated)' as product, 2800 as value)\n)\nGROUP BY q, product\nORDER BY q, product",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "consolidated_sales_for_products",
          "tableLoading": false
        }
      ],
      "title": "Консолидированные продажи в тоннах",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 75
      },
      "id": 11,
      "panels": [],
      "title": "Production & Sales",
      "type": "row"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 400,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 76
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select * FROM (\nSELECT\n    q,\n    last_value(multiIf(equals(rolled, 0), coil, rolled)) as \"Hot-Rolled\"\n    FROM (\n      SELECT $dateCol as q,\n      max(multiIf(equals('Hot - rolled coil and plate', product), price, 0)) as rolled,\n      max(multiIf(equals('Hot-rolled coil', product), price, 0)) as coil,\n      max(multiIf(equals('Hot-rolled plate', product), price, 0)) as plate\n      FROM $table\n      WHERE sec_code == 'CHMF' and product LIKE 'Hot%' GROUP BY q)\nGROUP BY q    \nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , $forecast_PriceAverage))\nORDER BY q",
          "rawQuery": "select * FROM (\nSELECT\n    q,\n    last_value(multiIf(equals(rolled, 0), coil, rolled)) as \"Hot-Rolled\"\n    FROM (\n      SELECT quarter as q,\n      max(multiIf(equals('Hot - rolled coil and plate', product), price, 0)) as rolled,\n      max(multiIf(equals('Hot-rolled coil', product), price, 0)) as coil,\n      max(multiIf(equals('Hot-rolled plate', product), price, 0)) as plate\n      FROM default.prices_for_products\n      WHERE sec_code == 'CHMF' and product LIKE 'Hot%' GROUP BY q)\nGROUP BY q    \nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , 880))\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "prices_for_products",
          "tableLoading": false
        },
        {
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateTimeType": "DATETIME",
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT * FROM (SELECT\n  quarter as q,\n  floor(revenue.value/sales.value * 1000) as \"Rolled cons\"\nFROM consolidated_sales_for_products as sales\nLEFT JOIN (SELECT sec_code, q, sum(v) as value\n           FROM (\n                SELECT\n                    sec_code,\n                    quarter as q,\n                    structure,\n                    last_value(value) as v\n                FROM default.revenue_structure\n                WHERE sec_code == 'CHMF'\n                  and has(array('Hot - rolled coil and plate', 'Galvanised and metallic coated coil', 'Cold - rolled coil', 'Colour coated coil', 'Long products'), structure) == 1\n                GROUP BY q, structure, sec_code)\n           GROUP BY q, sec_code\n) as revenue\nON revenue.sec_code = sales.sec_code and revenue.q = sales.quarter\nwhere sales.product == 'Rolled products'\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , $forecast_PriceAverage*1.107)\n)\nORDER BY q\n",
          "rawQuery": "SELECT * FROM (SELECT\n  quarter as q,\n  floor(revenue.value/sales.value * 1000) as \"Rolled cons\"\nFROM consolidated_sales_for_products as sales\nLEFT JOIN (SELECT sec_code, q, sum(v) as value\n           FROM (\n                SELECT\n                    sec_code,\n                    quarter as q,\n                    structure,\n                    last_value(value) as v\n                FROM default.revenue_structure\n                WHERE sec_code == 'CHMF'\n                  and has(array('Hot - rolled coil and plate', 'Galvanised and metallic coated coil', 'Cold - rolled coil', 'Colour coated coil', 'Long products'), structure) == 1\n                GROUP BY q, structure, sec_code)\n           GROUP BY q, sec_code\n) as revenue\nON revenue.sec_code = sales.sec_code and revenue.q = sales.quarter\nwhere sales.product == 'Rolled products'\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , 880*1.107)\n)\nORDER BY q",
          "refId": "A",
          "round": "0s",
          "skip_comments": true
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "date",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(close) as HRC_FOB_CHINA_avg, min(close) as HRC_FOB_CHINA_min\nFROM $table\nWHERE code == 'MHCc1'\nGROUP BY q\nORDER BY q",
          "rawQuery": "SELECT\n    toDate(toStartOfQuarter(date_add(month, 4, date))) as q,\n    avg(close) as HRC_FOB_CHINA_avg, min(close) as HRC_FOB_CHINA_min\nFROM default.stock_prices\nWHERE code == 'MHCc1'\nGROUP BY q\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "stock_prices",
          "tableLoading": false
        },
        {
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateTimeType": "DATETIME",
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT * FROM (SELECT\n  quarter as q,\n  floor(revenue.value/sales.value * 1000) as \"Downstream\"\nFROM consolidated_sales_for_products as sales\nLEFT JOIN (SELECT sec_code, q, sum(v) as value\n           FROM (\n                SELECT\n                    sec_code,\n                    quarter as q,\n                    structure,\n                    last_value(value) as v\n                FROM default.revenue_structure\n                WHERE sec_code == 'CHMF'\n                  and has(array('Metalware products', 'Large diameter pipes', 'Other tubes, pipes, formed shapes'), structure) == 1\n                GROUP BY q, structure, sec_code)\n           GROUP BY q, sec_code\n) as revenue\nON revenue.sec_code = sales.sec_code and revenue.q = sales.quarter\nwhere sales.product == 'Downstream products' and sec_code == 'CHMF'\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , $forecast_PriceAverage*1.144)\n)\nORDER BY q\n",
          "rawQuery": "SELECT * FROM (SELECT\n  quarter as q,\n  floor(revenue.value/sales.value * 1000) as \"Downstream\"\nFROM consolidated_sales_for_products as sales\nLEFT JOIN (SELECT sec_code, q, sum(v) as value\n           FROM (\n                SELECT\n                    sec_code,\n                    quarter as q,\n                    structure,\n                    last_value(value) as v\n                FROM default.revenue_structure\n                WHERE sec_code == 'CHMF'\n                  and has(array('Metalware products', 'Large diameter pipes', 'Other tubes, pipes, formed shapes'), structure) == 1\n                GROUP BY q, structure, sec_code)\n           GROUP BY q, sec_code\n) as revenue\nON revenue.sec_code = sales.sec_code and revenue.q = sales.quarter\nwhere sales.product == 'Downstream products' and sec_code == 'CHMF'\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , 880*1.144)\n)\nORDER BY q",
          "refId": "D",
          "round": "0s",
          "skip_comments": true
        },
        {
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateTimeType": "DATETIME",
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT * FROM (SELECT\n  quarter as q,\n  floor(revenue.value/sales.value * 1000) as \"Semi-finished\"\nFROM consolidated_sales_for_products as sales\nLEFT JOIN (SELECT sec_code, q, sum(v) as value\n           FROM (\n                SELECT\n                    sec_code,\n                    quarter as q,\n                    structure,\n                    last_value(value) as v\n                FROM default.revenue_structure\n                WHERE sec_code == 'CHMF'\n                  and has(array('Semi-finished products'), structure) == 1\n                GROUP BY q, structure, sec_code)\n           GROUP BY q, sec_code\n) as revenue\nON revenue.sec_code = sales.sec_code and revenue.q = sales.quarter\nwhere sales.product == 'Semi-finished products' and sec_code == 'CHMF'\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , $forecast_PriceAverage*0.74)\n)\nORDER BY q\n",
          "rawQuery": "SELECT * FROM (SELECT\n  quarter as q,\n  floor(revenue.value/sales.value * 1000) as \"Semi-finished\"\nFROM consolidated_sales_for_products as sales\nLEFT JOIN (SELECT sec_code, q, sum(v) as value\n           FROM (\n                SELECT\n                    sec_code,\n                    quarter as q,\n                    structure,\n                    last_value(value) as v\n                FROM default.revenue_structure\n                WHERE sec_code == 'CHMF'\n                  and has(array('Semi-finished products'), structure) == 1\n                GROUP BY q, structure, sec_code)\n           GROUP BY q, sec_code\n) as revenue\nON revenue.sec_code = sales.sec_code and revenue.q = sales.quarter\nwhere sales.product == 'Semi-finished products' and sec_code == 'CHMF'\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , 880*0.74)\n)\nORDER BY q",
          "refId": "E",
          "round": "0s",
          "skip_comments": true
        },
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select * FROM (\n      SELECT $dateCol as q, last_value(price) as \"Weighted average selling price\"\n      FROM $table\n      WHERE sec_code == 'CHMF' and product == 'Weighted average selling price'\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , 940 as price))\nORDER BY q",
          "rawQuery": "select * FROM (\n      SELECT quarter as q, last_value(price) as \"Weighted average selling price\"\n      FROM default.prices_for_products\n      WHERE sec_code == 'CHMF' and product == 'Weighted average selling price'\nGROUP BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 3, now()))) as q , 940 as price))\nORDER BY q",
          "refId": "F",
          "round": "0s",
          "skip_comments": true,
          "table": "prices_for_products",
          "tableLoading": false
        }
      ],
      "title": "Цены прокатной продукции за тонну",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 84
      },
      "id": 32,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateColDataType": "date",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(close) as \"Iron Ore CFR China 62% Fe\"\nfrom $table\nWHERE code == 'SGXIOSc1'\nGROUP BY q\nORDER BY q",
          "rawQuery": "select\n    toDate(toStartOfQuarter(date_add(month, 4, date))) as q,\n    avg(close) as \"Iron Ore CFR China 62% Fe\"\nfrom default.stock_prices\nWHERE code == 'SGXIOSc1'\nGROUP BY q\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "stock_prices",
          "tableLoading": false
        },
        {
          "datasource": {
            "type": "vertamedia-clickhouse-datasource",
            "uid": "clickhouse"
          },
          "dateTimeType": "DATETIME",
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT * FROM (SELECT\n  quarter as q,\n  floor(revenue.value/sales.value * 1000) as \"Iron ore price\"\nFROM consolidated_sales_for_products as sales\nLEFT JOIN (SELECT sec_code, q, sum(v) as value\n           FROM (\n                SELECT\n                    sec_code,\n                    quarter as q,\n                    structure,\n                    last_value(value) as v\n                FROM default.revenue_structure\n                WHERE sec_code == 'CHMF' and structure == 'Iron ore pellets and concentrate'\n                GROUP BY q, structure, sec_code)\n           GROUP BY q, sec_code\n) as revenue\nON revenue.sec_code = sales.sec_code and revenue.q = sales.quarter\nwhere sales.product == 'Iron ore' and sec_code == 'CHMF'\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 2, now()))) as q ,  114*1.085)\n)\nORDER BY q\n",
          "rawQuery": "SELECT * FROM (SELECT\n  quarter as q,\n  floor(revenue.value/sales.value * 1000) as \"Iron ore price\"\nFROM consolidated_sales_for_products as sales\nLEFT JOIN (SELECT sec_code, q, sum(v) as value\n           FROM (\n                SELECT\n                    sec_code,\n                    quarter as q,\n                    structure,\n                    last_value(value) as v\n                FROM default.revenue_structure\n                WHERE sec_code == 'CHMF' and structure == 'Iron ore pellets and concentrate'\n                GROUP BY q, structure, sec_code)\n           GROUP BY q, sec_code\n) as revenue\nON revenue.sec_code = sales.sec_code and revenue.q = sales.quarter\nwhere sales.product == 'Iron ore' and sec_code == 'CHMF'\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 2, now()))) as q ,  114*1.085)\n)\nORDER BY q",
          "refId": "A",
          "round": "0s",
          "skip_comments": true
        }
      ],
      "title": "Цены на продукцию из ЖРС за тонну",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 92
      },
      "id": 31,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "dateColDataType": "",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(close) as 62PercFe\nfrom $table\nWHERE code == 'SGXIOSc1'\nGROUP BY q\nORDER BY q\n",
          "rawQuery": "select\n    toDate(toStartOfQuarter(date_add(month, 4, date))) as q,\n    avg(close) as 62PercFe\nfrom default.stock_prices\nWHERE code == 'SGXIOSc1'\nGROUP BY q\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "stock_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    $dateCol as q,\n    last_value(price) as Index62Fe\nFROM $table\nWHERE product == 'Fe'\nGROUP BY q\nORDER BY q\n",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(price) as Index62Fe\nFROM default.fob_prices\nWHERE product == 'Fe'\nGROUP BY q\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "fob_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT q, sum(perc) as IronSlab FROM (\nSELECT\n    quarter as q,\n    last_value(slab_cash_cost_structure.value)*last_value(financial_ratios.value) as perc\nFROM slab_cash_cost_structure\n       LEFT JOIN financial_ratios ON\n           financial_ratios.quarter == slab_cash_cost_structure.quarter\n        and financial_ratios.sec_code == slab_cash_cost_structure.sec_code\nWHERE (structure == 'Pellets'\n   or structure == 'Iron ore & concentrate'\n   or structure == 'Metal scrap')\n   and indicator == 'Slab Cash cost (USD/t)'\nGROUP BY q, structure)\nGROUP BY q\nORDER BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 1, now()))) as q , $forecast_IronSlab)",
          "queryType": "randomWalk",
          "rawQuery": "SELECT q, sum(perc) as IronSlab FROM (\nSELECT\n    quarter as q,\n    last_value(slab_cash_cost_structure.value)*last_value(financial_ratios.value) as perc\nFROM slab_cash_cost_structure\n       LEFT JOIN financial_ratios ON\n           financial_ratios.quarter == slab_cash_cost_structure.quarter\n        and financial_ratios.sec_code == slab_cash_cost_structure.sec_code\nWHERE (structure == 'Pellets'\n   or structure == 'Iron ore & concentrate'\n   or structure == 'Metal scrap')\n   and indicator == 'Slab Cash cost (USD/t)'\nGROUP BY q, structure)\nGROUP BY q\nORDER BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 1, now()))) as q , 244)",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        }
      ],
      "title": "Корреляция индекса ЖРС и железной части кеш-кост сляба",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "left",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 102
      },
      "id": 15,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "dateColDataType": "date",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(close) as US_HRC\nfrom $table\nWHERE code == 'HRCc1'\nGROUP BY q\nORDER BY q",
          "queryType": "randomWalk",
          "rawQuery": "select\n    toDate(toStartOfQuarter(date_add(month, 2, date))) as q,\n    avg(close) as US_HRC\nfrom default.stock_prices\nWHERE code == 'HRCc1'\nGROUP BY q\nORDER BY q",
          "refId": "D",
          "round": "0s",
          "skip_comments": true,
          "table": "stock_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "date",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(close) as HRC_FOB_CHINA\nFROM $table\n\nWHERE code == 'MHCc1'\n\nGROUP BY q\n\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    toDate(toStartOfQuarter(date_add(month, 2, date))) as q,\n    avg(close) as HRC_FOB_CHINA\nFROM default.stock_prices\n\nWHERE code == 'MHCc1'\n\nGROUP BY q\n\nORDER BY q",
          "refId": "E",
          "round": "0s",
          "skip_comments": true,
          "table": "stock_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "date",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(M3) as LME_HC\nfrom $table\nWHERE code == 'HC'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "select\n    toDate(toStartOfQuarter(date_add(month, 2, date))) as q,\n    avg(M3) as LME_HC\nfrom default.lme_closing_prices\nWHERE code == 'HC'\nGROUP BY q\nORDER BY q",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "lme_closing_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "date",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(M12) as LME_HU\nfrom $table\nWHERE code == 'HU'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "select\n    toDate(toStartOfQuarter(date_add(month, 2, date))) as q,\n    avg(M12) as LME_HU\nfrom default.lme_closing_prices\nWHERE code == 'HU'\nGROUP BY q\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "lme_closing_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": false,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": true,
          "intervalFactor": 1,
          "query": "SELECT\n    $dateCol as q,\n    last_value(price) as ConsolidateFlatHotRolled\nFROM $table\nWHERE product == 'Flat hot-rolled products'\nGROUP BY q\nORDER BY q",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(price) as ConsolidateFlatHotRolled\nFROM default.consolidated_prices_for_products\nWHERE product == 'Flat hot-rolled products'\nGROUP BY q\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "consolidated_prices_for_products",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "date",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(close)/8 as SHHCc1\nfrom $table\nWHERE code == 'SHHCc1'\nGROUP BY q\nORDER BY q",
          "queryType": "randomWalk",
          "rawQuery": "select\n    toDate(toStartOfQuarter(date_add(month, 2, date))) as q,\n    avg(close)/8 as SHHCc1\nfrom default.stock_prices\nWHERE code == 'SHHCc1'\nGROUP BY q\nORDER BY q",
          "refId": "F",
          "round": "0s",
          "skip_comments": true,
          "table": "stock_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": false,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    $dateCol as q,\n    last_value(price) as FlatHotRolled\nFROM $table\nWHERE product == 'Flat hot-rolled products'\nGROUP BY q\nORDER BY q",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(price) as FlatHotRolled\nFROM default.prices_for_products\nWHERE product == 'Flat hot-rolled products'\nGROUP BY q\nORDER BY q",
          "refId": "G",
          "round": "0s",
          "skip_comments": true,
          "table": "prices_for_products",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": false,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    $dateCol as q,\n    last_value(price) as MMK_CHINA\nFROM $table\nWHERE product == 'HRC FOB CHINA'\nGROUP BY q\nORDER BY q",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(price) as MMK_CHINA\nFROM default.fob_prices\nWHERE product == 'HRC FOB CHINA'\nGROUP BY q\nORDER BY q",
          "refId": "H",
          "round": "0s",
          "skip_comments": true,
          "table": "fob_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": false,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    $dateCol as q,\n    last_value(price) as MMK_BLACK_SEA\nFROM $table\nWHERE product == 'HRC FOB Black sea'\nGROUP BY q\nORDER BY q",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(price) as MMK_BLACK_SEA\nFROM default.fob_prices\nWHERE product == 'HRC FOB Black sea'\nGROUP BY q\nORDER BY q",
          "refId": "I",
          "round": "0s",
          "skip_comments": true,
          "table": "fob_prices",
          "tableLoading": false
        }
      ],
      "title": "Средневзвешенная цена готовой продукции  в дол. США",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 110
      },
      "id": 19,
      "panels": [],
      "title": "COS breakdown",
      "type": "row"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 111
      },
      "id": 21,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Other\nFROM $table\n\nWHERE structure == 'Other production costs'\n\nGROUP BY q\n\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Other\nFROM default.cost_of_sales_structure\n\nWHERE structure == 'Other production costs'\n\nGROUP BY q\n\nORDER BY q",
          "refId": "D",
          "round": "0s",
          "skip_comments": true,
          "table": "cost_of_sales_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Services\nFROM $table\n\nWHERE structure == 'Services received'\n\nGROUP BY q\n\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Services\nFROM default.cost_of_sales_structure\n\nWHERE structure == 'Services received'\n\nGROUP BY q\n\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "cost_of_sales_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Depreciation\nFROM $table\n\nWHERE structure == 'Depreciation'\n\nGROUP BY q\n\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Depreciation\nFROM default.cost_of_sales_structure\n\nWHERE structure == 'Depreciation'\n\nGROUP BY q\n\nORDER BY q",
          "refId": "E",
          "round": "0s",
          "skip_comments": true,
          "table": "cost_of_sales_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Labour\nFROM $table\n\nWHERE structure == 'Labour costs'\n\nGROUP BY q\n\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Labour\nFROM default.cost_of_sales_structure\n\nWHERE structure == 'Labour costs'\n\nGROUP BY q\n\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "cost_of_sales_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Material\nFROM $table\n\nWHERE structure == 'Material costs'\n\nGROUP BY q\n\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Material\nFROM default.cost_of_sales_structure\n\nWHERE structure == 'Material costs'\n\nGROUP BY q\n\nORDER BY q",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "cost_of_sales_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": true,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Total\nFROM $table\n\nWHERE structure == 'Total cost of sales'\n\nGROUP BY q\n\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Total\nFROM default.cost_of_sales_structure\n\nWHERE structure == 'Total cost of sales'\n\nGROUP BY q\n\nORDER BY q",
          "refId": "F",
          "round": "0s",
          "skip_comments": true,
          "table": "cost_of_sales_structure",
          "tableLoading": false
        }
      ],
      "title": "Структура затрат",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "OtherMain",
                  "Coal",
                  "Auxilary"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 111
      },
      "id": 23,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Fuel\nFROM $table\nWHERE material == 'Fuel'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Fuel\nFROM default.material_cost_structure\nWHERE material == 'Fuel'\nGROUP BY q\nORDER BY q",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Gas\nFROM $table\nWHERE material == 'Gas'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Gas\nFROM default.material_cost_structure\nWHERE material == 'Gas'\nGROUP BY q\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Auxilary\nFROM $table\nWHERE material == 'Auxilary materials'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Auxilary\nFROM default.material_cost_structure\nWHERE material == 'Auxilary materials'\nGROUP BY q\nORDER BY q",
          "refId": "D",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as OtherMain\nFROM $table\nWHERE material == 'Other main materials'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as OtherMain\nFROM default.material_cost_structure\nWHERE material == 'Other main materials'\nGROUP BY q\nORDER BY q",
          "refId": "E",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Pellets\nFROM $table\nWHERE material == 'Pellets'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Pellets\nFROM default.material_cost_structure\nWHERE material == 'Pellets'\nGROUP BY q\nORDER BY q",
          "refId": "F",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as IronOre\nFROM $table\nWHERE material == 'Iron ore & concentrate'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as IronOre\nFROM default.material_cost_structure\nWHERE material == 'Iron ore & concentrate'\nGROUP BY q\nORDER BY q",
          "refId": "G",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Coal\nFROM $table\nWHERE material == 'Coal concentrate'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Coal\nFROM default.material_cost_structure\nWHERE material == 'Coal concentrate'\nGROUP BY q\nORDER BY q",
          "refId": "H",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Pellets\nFROM $table\nWHERE material == 'Pellets'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Pellets\nFROM default.material_cost_structure\nWHERE material == 'Pellets'\nGROUP BY q\nORDER BY q",
          "refId": "I",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Scrap\nFROM $table\nWHERE material == 'Metal scrap'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Scrap\nFROM default.material_cost_structure\nWHERE material == 'Metal scrap'\nGROUP BY q\nORDER BY q",
          "refId": "J",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    quarter as q,\n    last_value(value) as Power\nFROM $table\nWHERE material == 'Power'\nGROUP BY q\nORDER BY q\n",
          "queryType": "randomWalk",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(value) as Power\nFROM default.material_cost_structure\nWHERE material == 'Power'\nGROUP BY q\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        }
      ],
      "title": "Затраты на материалы, USD mln",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 119
      },
      "id": 25,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "dateColDataType": "",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "select\n    toDate(toStartOfQuarter(date_add(month, $price_lag_months, date))) as q,\n    avg(close) as 62PercFe\nfrom $table\nWHERE code == 'SGXIOSc1'\nGROUP BY q\nORDER BY q\n",
          "rawQuery": "select\n    toDate(toStartOfQuarter(date_add(month, 2, date))) as q,\n    avg(close) as 62PercFe\nfrom default.stock_prices\nWHERE code == 'SGXIOSc1'\nGROUP BY q\nORDER BY q",
          "refId": "B",
          "round": "0s",
          "skip_comments": true,
          "table": "stock_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    $dateCol as q,\n    last_value(price) as Index62Fe\nFROM $table\nWHERE product == 'Fe'\nGROUP BY q\nORDER BY q\n",
          "rawQuery": "SELECT\n    quarter as q,\n    last_value(price) as Index62Fe\nFROM default.fob_prices\nWHERE product == 'Fe'\nGROUP BY q\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "fob_prices",
          "tableLoading": false
        },
        {
          "database": "default",
          "dateColDataType": "quarter",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "intervalFactor": 1,
          "query": "SELECT q, sum(perc) as IronSlab FROM (\nSELECT\n    quarter as q,\n    last_value(slab_cash_cost_structure.value)*last_value(financial_ratios.value) as perc\nFROM slab_cash_cost_structure\n       LEFT JOIN financial_ratios ON\n           financial_ratios.quarter == slab_cash_cost_structure.quarter\n        and financial_ratios.sec_code == slab_cash_cost_structure.sec_code\nWHERE (structure == 'Pellets'\n   or structure == 'Iron ore & concentrate'\n   or structure == 'Metal scrap')\n   and indicator == 'Slab Cash cost (USD/t)'\nGROUP BY q, structure)\nGROUP BY q\nORDER BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 1, now()))) as q , $forecast_IronSlab)",
          "queryType": "randomWalk",
          "rawQuery": "SELECT q, sum(perc) as IronSlab FROM (\nSELECT\n    quarter as q,\n    last_value(slab_cash_cost_structure.value)*last_value(financial_ratios.value) as perc\nFROM slab_cash_cost_structure\n       LEFT JOIN financial_ratios ON\n           financial_ratios.quarter == slab_cash_cost_structure.quarter\n        and financial_ratios.sec_code == slab_cash_cost_structure.sec_code\nWHERE (structure == 'Pellets'\n   or structure == 'Iron ore & concentrate'\n   or structure == 'Metal scrap')\n   and indicator == 'Slab Cash cost (USD/t)'\nGROUP BY q, structure)\nGROUP BY q\nORDER BY q\nUNION ALL (SELECT toDate(toStartOfQuarter(date_add(month, 1, now()))) as q , 244)",
          "refId": "A",
          "round": "0s",
          "skip_comments": true,
          "table": "material_cost_structure",
          "tableLoading": false
        }
      ],
      "title": "Корреляция индекса ЖРС и железной части кеш-кост сляба",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "vertamedia-clickhouse-datasource",
        "uid": "clickhouse"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 127
      },
      "id": 35,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "database": "default",
          "dateColDataType": "month",
          "dateLoading": false,
          "dateTimeType": "DATETIME",
          "datetimeLoading": false,
          "extrapolate": true,
          "format": "time_series",
          "formattedQuery": "SELECT $timeSeries as t, count() FROM $table WHERE $timeFilter GROUP BY t ORDER BY t",
          "hide": false,
          "intervalFactor": 1,
          "query": "SELECT\n    $dateCol as q,\n    last_value(if(runningDifference(export)>0,runningDifference(export),export)) as Export,\n    last_value(if(runningDifference(cis)>0,runningDifference(cis), cis)) as \"CIS\"\nFROM $table\n\nwhere name = 'ВОЛОГОДСКАЯ ОБЛАСТЬ'\nGROUP BY q\nORDER BY q",
          "rawQuery": "SELECT\n    month as q,\n    last_value(if(runningDifference(export)>0,runningDifference(export),export)) as Export,\n    last_value(if(runningDifference(cis)>0,runningDifference(cis), cis)) as \"CIS\"\nFROM default.export_regions\n\nwhere name = 'ВОЛОГОДСКАЯ ОБЛАСТЬ'\nGROUP BY q\nORDER BY q",
          "refId": "C",
          "round": "0s",
          "skip_comments": true,
          "table": "export_regions",
          "tableLoading": false
        }
      ],
      "title": "Экспорт ВОЛОГОДСКАЯ область, млн. долл. США",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 33,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "CHMF",
          "value": "CHMF"
        },
        "datasource": {
          "type": "vertamedia-clickhouse-datasource",
          "uid": "clickhouse"
        },
        "definition": "SELECT seccode FROM securities",
        "hide": 0,
        "includeAll": false,
        "label": "sec_code",
        "multi": false,
        "name": "sec_code",
        "options": [],
        "query": "SELECT seccode FROM securities",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "4",
          "value": "4"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "price_lag_months",
        "options": [
          {
            "selected": false,
            "text": "0",
            "value": "0"
          },
          {
            "selected": false,
            "text": "1",
            "value": "1"
          },
          {
            "selected": false,
            "text": "1.25",
            "value": "1.25"
          },
          {
            "selected": false,
            "text": "1.5",
            "value": "1.5"
          },
          {
            "selected": false,
            "text": "1.75",
            "value": "1.75"
          },
          {
            "selected": false,
            "text": "2",
            "value": "2"
          }
        ],
        "query": "0,1,1.25,1.5,1.75,2",
        "queryValue": "4",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": "244",
          "value": "244"
        },
        "hide": 0,
        "includeAll": false,
        "label": "",
        "multi": false,
        "name": "forecast_IronSlab",
        "options": [
          {
            "selected": true,
            "text": "244",
            "value": "244"
          }
        ],
        "query": "244",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "880",
          "value": "880"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "forecast_PriceAverage",
        "options": [
          {
            "selected": true,
            "text": "825",
            "value": "825"
          }
        ],
        "query": "825",
        "queryValue": "880",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "isNone": true,
          "selected": false,
          "text": "None",
          "value": ""
        },
        "datasource": {
          "type": "vertamedia-clickhouse-datasource",
          "uid": "clickhouse"
        },
        "definition": "SELECT floor(sum(perc)+$forecast_IronSlab,1) as Slab\nFROM (\n      SELECT last_value(quarter) as q,\n             last_value(slab_cash_cost_structure.value) * last_value(financial_ratios.value) as perc\n      FROM slab_cash_cost_structure\n               LEFT JOIN financial_ratios ON\n              financial_ratios.quarter == slab_cash_cost_structure.quarter\n              and financial_ratios.sec_code == slab_cash_cost_structure.sec_code\n      WHERE (structure == 'Pellets'\n   or structure == 'Iron ore & concentrate'\n   or structure == 'Metal scrap')\n        and indicator == 'Slab Cash cost (USD/t)'\n      GROUP BY structure)\nGROUP BY q\nORDER BY q",
        "description": "",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "forecast_Slab",
        "options": [],
        "query": "SELECT floor(sum(perc)+$forecast_IronSlab,1) as Slab\nFROM (\n      SELECT last_value(quarter) as q,\n             last_value(slab_cash_cost_structure.value) * last_value(financial_ratios.value) as perc\n      FROM slab_cash_cost_structure\n               LEFT JOIN financial_ratios ON\n              financial_ratios.quarter == slab_cash_cost_structure.quarter\n              and financial_ratios.sec_code == slab_cash_cost_structure.sec_code\n      WHERE (structure == 'Pellets'\n   or structure == 'Iron ore & concentrate'\n   or structure == 'Metal scrap')\n        and indicator == 'Slab Cash cost (USD/t)'\n      GROUP BY structure)\nGROUP BY q\nORDER BY q",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "1214",
          "value": "1214"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "forecast_price",
        "options": [
          {
            "selected": false,
            "text": "1900",
            "value": "1900"
          }
        ],
        "query": "1900",
        "queryValue": "1214",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": false,
          "text": "837.72",
          "value": "837.72"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "shares",
        "options": [
          {
            "selected": true,
            "text": "837.72",
            "value": "837.72"
          }
        ],
        "query": "837.72",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-5y",
    "to": "now+6M"
  },
  "timepicker": {},
  "timezone": "",
  "title": "SeverStal Forecast",
  "uid": "chmf",
  "version": 7,
  "weekStart": ""
}